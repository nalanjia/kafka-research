<?xml version="1.0" encoding="UTF-8" ?>

<configuration debug="true">
	<!-- 项目名称，使用application.properties中的 -->
	<springProperty scope="context" name="msName" source="spring.application.name"/>
	
	<!-- 通用日志格式，中间的@v@@f@行可以随便新增 -->
	<property name="normalPattern" value="@begin@
bTime@v@%d{yyyy-MM-dd HH:mm:ss}@f@
bLevel@v@%-5level@f@
bUserId@v@%X{userId}@f@
bUserIp@v@%X{userIp}@f@
bMsName@v@${msName}@f@
bTraceId@v@%X{X-B3-TraceId:-}@f@
bSpanId@v@%X{X-B3-SpanId:-}@f@
bPos@v@%logger{50}:%L@f@
bMsg@v@%msg@f@
	@end@%n" />
	
	<appender name="consoleAppender" class="ch.qos.logback.core.ConsoleAppender">
		<encoder><pattern>%d{yyyy-MM-dd HH:mm:ss} %-5level %X{userId} %X{userIp} ${msName} %X{X-B3-TraceId:-} %X{X-B3-SpanId:-} %logger{50}:%L %msg %n</pattern></encoder>
	</appender>
	<appender name="consoleAppender2" class="ch.qos.logback.core.ConsoleAppender">
		<encoder><pattern>分析日志 - %msg%n</pattern></encoder>
	</appender>

	<!-- 普通日志，以log开头 -->
	<appender name="defaultAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
			<FileNamePattern>logs/log%d{yyyy-MM-dd}.%i.log</FileNamePattern>
			<maxFileSize>100MB</maxFileSize>
			<MaxHistory>30</MaxHistory>
		</rollingPolicy>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>${normalPattern}</pattern>
		</encoder>
	</appender>
	
	<!-- 分析日志，以analysis开头 -->
	<appender name="analysisAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
			<FileNamePattern>logs/analysis%d{yyyy-MM-dd}.%i.log</FileNamePattern>
			<maxFileSize>100MB</maxFileSize>
			<MaxHistory>30</MaxHistory>
		</rollingPolicy>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<!-- 分析日志格式，必须为%msg%n，禁止修改 -->
			<pattern>%msg%n</pattern>
		</encoder>
	</appender>	

	<!-- 第三方库error级别以下的日志忽略 -->
	<logger name="org.springframework" additivity="false">
		<level value="error" />
		<appender-ref ref="defaultAppender" />
		<appender-ref ref="consoleAppender" />
	</logger>
	<logger name="net.sf" additivity="false">
		<level value="error" />
		<appender-ref ref="defaultAppender" />
		<appender-ref ref="consoleAppender" />
	</logger>
	<logger name="org.quartz" additivity="false">
		<level value="error" />
		<appender-ref ref="defaultAppender" />
		<appender-ref ref="consoleAppender" />
	</logger>
	<logger name="ch.qos" additivity="false">
		<level value="error" />
		<appender-ref ref="defaultAppender" />
		<appender-ref ref="consoleAppender" />
	</logger>
	<logger name="org.apache" additivity="false">
		<level value="error" />
		<appender-ref ref="defaultAppender" />
		<appender-ref ref="consoleAppender" />
	</logger>
	<logger name="org.hibernate" additivity="false">
		<level value="error" />
		<appender-ref ref="defaultAppender" />
		<appender-ref ref="consoleAppender" />
	</logger>
	<logger name="ch.qos.logback" additivity="false">
		<level value="error" />
		<appender-ref ref="defaultAppender" />
		<appender-ref ref="consoleAppender" />
	</logger>
	<logger name="com.zaxxer.hikari.pool" additivity="false">
		<level value="error" />
		<appender-ref ref="defaultAppender" />
		<appender-ref ref="consoleAppender" />
	</logger>
	<logger name="com.aebiz.FeignConfiguration" additivity="false">
		<level value="error" />
		<appender-ref ref="defaultAppender" />
		<appender-ref ref="consoleAppender" />
	</logger>

	<!--
		log.debug("")中的log变量，如何获取 
		
		方式1，LoggerFactory
		import org.slf4j.Logger;
		import org.slf4j.LoggerFactory; 
		private static Logger log = LoggerFactory.getLogger(XXX.class);
		
		方式2，依赖lombok之后使用类注解
		@Slf4j
	-->
		
	<logger name="com.aebiz" level="debug" additivity="false">
		<appender-ref ref="defaultAppender" />
		<appender-ref ref="consoleAppender" />
	</logger>
	<logger name="org.springframework.kafka" level="trace" additivity="false">
		<appender-ref ref="defaultAppender" />
		<appender-ref ref="consoleAppender" />
	</logger>
	
	<!-- AnalysisLogUtil专用 -->
	<logger name="analysisLogger" level="debug" additivity="false">
		<appender-ref ref="analysisAppender" />
		<appender-ref ref="consoleAppender2" />
	</logger>
	
	<root level="error">
		<appender-ref ref="defaultAppender" />
		<appender-ref ref="consoleAppender" />
	</root>

</configuration>